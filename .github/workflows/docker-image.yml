name: Docker Image CI

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TARGETARCH: amd64 

    steps:
    - name: checkout
      uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 1
        
    - name: Run tests
      run: make test
    - name: Run build
      run: make build

    - name: Get app name from git remote URL
      id: get-app-name
      run: |
        APP_NAME=$(basename $(git remote get-url origin) .git)
        echo "APP_NAME=$APP_NAME"
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
    - name: Get version tag     
      id: get-version-tag
      run: |
        VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)
        echo "VERSION=$VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Update Helm chart values.yaml with new image tag
      run: |
        sed -i 's/tag:.*/tag: "${{ env.VERSION }}-amd64"/' ./helm/values.yaml 
        cat ./helm/values.yaml 
        pwd
        ls
    - name: Package Helm chart
      run: |
        mkdir new
        helm package helm --destination ./new
        ls -l *.tgz

    - name: Release file
      uses: djnicholson/release-action@v2.10
      with:
          token: ${{ secrets.PIPIGA }}
          release-name: kbot-helm
          tag-name: ${{ env.VERSION }}-${{ env.TARGETARCH }}
          asset-name: kbot-helm
          file: helm-0.1.0.tgz
        
        
    - name: Github Container Registry push Docker image
      uses: pmorelli92/github-container-registry-build-push@2.1.0
      with:
          github-push-secret: ${{ secrets.TOKENELLO }}
          docker-image-name: ${{ env.APP_NAME }}
          #docker-image-tag: ${{ env.VERSION }}-${{ env.TARGETARCH }}


