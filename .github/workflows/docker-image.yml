name: Docker Image CI

on:
  push:
    branches: [ "develop" ]
      - 'v*.*.*'  # This triggers the workflow only when a tag is pushed

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TARGETARCH: amd64 

    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run tests
      run: make test
    - name: Run build
      run: make build

    - name: Get app name from git remote URL
      id: get-app-name
      run: |
        APP_NAME=$(basename $(git remote get-url origin) .git)
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
    - name: Get version tag     
      id: get-version-tag
      run: |
        VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)
        echo VERSION=$VERSION >> $GITHUB_ENV
    - name: Update Helm chart values.yaml with new image tag
      run: |
        sed -i 's/tag:.*/tag: "${{ env.VERSION }}-amd64"/' ./helm/values.yaml 
        cat ./helm/values.yaml 
        pwd
        ls
    - name: Package Helm chart
      run: |
        helm package helm
        ls -l *.tgz

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PIPIGA }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Helm Chart to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PIPIGA }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./helm-0.1.0.tgz
        asset_name: ./helm-0.1.0.tgz
        asset_content_type: application/gzip
    - name: Github Container Registry push Docker image
      uses: pmorelli92/github-container-registry-build-push@2.1.0
      with:
          github-push-secret: ${{ secrets.TOKENELLO }}
          docker-image-name: ${{ env.APP_NAME }}
          docker-image-tag: ${{ env.VERSION }}-${{ env.TARGETARCH }}
